{"version":3,"sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./src/views/model-deploy/RegisteredModelsPage.vue?c8d3","webpack:///src/views/model-deploy/RegisteredModelsPage.vue","webpack:///./src/views/model-deploy/RegisteredModelsPage.vue?abde","webpack:///./src/views/model-deploy/RegisteredModelsPage.vue"],"names":["_typeof","o","constructor","prototype","render","_vm","this","_h","$createElement","_c","_self","staticStyle","staticClass","attrs","activeIndex","on","handleSelect","_v","filters","nativeOn","$event","preventDefault","type","indexOf","_k","keyCode","key","getModelsList","model","value","callback","$$v","$set","expression","handleAdd","handleSingleCheck","directives","name","rawName","models","selsChange","scopedSlots","_u","fn","scope","size","slot","params","model_name","row","_s","handleDel","$index","_f","last_updated_timestamp","latest_version_prodcution","latest_version","tags","description","model_meta","port","status","total","handleCurrentChange","editFormVisible","ref","editForm","editFormRules","_l","item","label","editLoading","editSubmit","addFormVisible","addForm","addFormRules","trim","addLoading","addSubmit","staticRenderFns","data","users","page","listLoading","sels","options","required","message","trigger","min","max","proj_type","version","formatDate","date","Date","y","getFullYear","MM","getMonth","d","getDate","h","getHours","m","getMinutes","s","getSeconds","methods","checkModelService","ifall","self","$","ajax","url","test","async","JSON","stringify","user_name","parse","sessionStorage","getItem","headers","Authorization","timeout","success","console","log","openCheck","tagstyle","_this","$msgbox","title","style","class","showCancelButton","confirmButtonText","cancelButtonText","beforeClose","action","instance","done","confirmButtonLoading","setTimeout","then","index","keyPath","formatTime2","column","property","formatTime","moment","format","getUserInfo","param","project_id","$route","code","$message","error","msg","center","user_key","getRegisteredModels","res","_this2","$confirm","ids","id","header","delRegisteredModel","_data","val","handleEdit","Object","assign","_this3","$refs","validate","valid","updateProject","resetFields","_this4","RegisterModel","mounted","component"],"mappings":"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","file":"js/chunk-3156a37c.d98352be.js","sourcesContent":["import _Symbol from \"core-js/library/fn/symbol/index.js\";\nimport _Symbol$iterator from \"core-js/library/fn/symbol/iterator.js\";\nexport default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof _Symbol && \"symbol\" == typeof _Symbol$iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof _Symbol && o.constructor === _Symbol && o !== _Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticStyle:{\"margin-left\":\"15px\",\"margin-right\":\"15px\",\"margin-top\":\"15px\"}},[_c('el-card',{staticClass:\"box-card\"},[_c('el-menu',{staticClass:\"el-menu-demo\",attrs:{\"default-active\":_vm.activeIndex,\"menu-trigger\":\"click\",\"mode\":\"horizontal\",\"router\":\"true\"},on:{\"select\":_vm.handleSelect}},[_c('el-menu-item',{attrs:{\"index\":\"/models\"}},[_vm._v(\"模型部署与管理\")]),_c('el-menu-item',{attrs:{\"index\":\"/experiments\"}},[_vm._v(\"模型实验跟踪\")]),_c('el-menu-item',{attrs:{\"index\":\"/features\"}},[_vm._v(\"中央特征存储\")])],1),_c('br'),_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"0px\"},attrs:{\"span\":24}},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.filters},nativeOn:{\"submit\":function($event){$event.preventDefault();}}},[_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"名称\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.getModelsList($event)}},model:{value:(_vm.filters.name),callback:function ($$v) {_vm.$set(_vm.filters, \"name\", $$v)},expression:\"filters.name\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getModelsList}},[_vm._v(\"查询\")])],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"注册模型\")])],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-magic-stick\"},on:{\"click\":_vm.handleSingleCheck}},[_vm._v(\"服务状态\")])],1)],1)],1),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.models,\"highlight-current-row\":\"\"},on:{\"selection-change\":_vm.selsChange}},[_c('el-table-column',{scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"hover\"}},[_c('el-descriptions',{staticClass:\"margin-top\",attrs:{\"title\":\"\",\"column\":3,\"size\":_vm.size}},[_c('template',{slot:\"title\"},[_c('router-link',{staticStyle:{\"cursor\":\"pointer\",\"color\":\"#0000FF\",\"text-decoration\":\"underline\"},attrs:{\"to\":{ name: '模型版本管理', params: {model_name: scope.row.name}}}},[_vm._v(\"\\n                      \"+_vm._s(scope.row.name)+\"\\n            \")])],1),_c('template',{slot:\"extra\"},[_c('el-button',{staticStyle:{\"color\":\"#808B96\"},attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleDel(scope.$index, scope.row)}}},[_vm._v(\"删除\")])],1),_c('el-descriptions-item',{attrs:{\"label\":\"最近更新时间\"}},[_vm._v(_vm._s(_vm._f(\"formatDate\")(scope.row.last_updated_timestamp)))]),_c('el-descriptions-item',{attrs:{\"label\":\"生产版本\"}},[_vm._v(_vm._s(scope.row.latest_version_prodcution || '暂无'))]),_c('el-descriptions-item',{attrs:{\"label\":\"最新版本\"}},[_vm._v(_vm._s(scope.row.latest_version  || '暂无'))]),_c('el-descriptions-item',{attrs:{\"label\":\"标签\"}},[_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"info\"}},[_vm._v(_vm._s(scope.row.tags  || '暂无'))])],1),_c('el-descriptions-item',{attrs:{\"label\":\"模型描述\"}},[_vm._v(_vm._s(scope.row.description))]),_c('el-descriptions-item',{attrs:{\"label\":\"生产端口\"}},[_vm._v(_vm._s(_vm.model_meta[scope.row.name].port))]),_c('el-descriptions-item',{attrs:{\"label\":\"服务状态\"}},[(_vm.model_meta[scope.row.name].status==='running')?_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"small\"}},[_vm._v(\"服务中\")]):(_vm.model_meta[scope.row.name].port==='null')?_c('el-tag',{attrs:{\"type\":\"info\",\"size\":\"small\"}},[_vm._v(\"未部署\")]):_c('el-tag',{attrs:{\"type\":\"danger\",\"size\":\"small\"}},[_vm._v(\"已停止\")]),_c('el-link',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleSingleCheck(scope.$index, scope.row)}}},[_c('i',{staticClass:\"el-icon-magic-stick\"}),_vm._v(\"检查状态\\n    \")])],1)],2)],1)]}}])})],1),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"layout\":\"prev, pager, next\",\"page-size\":10,\"page-count\":_vm.total},on:{\"current-change\":_vm.handleCurrentChange}})],1)],1),_c('el-dialog',{staticStyle:{\"width\":\"75%\",\"left\":\"12.5%\"},attrs:{\"title\":\"编辑\",\"visible\":_vm.editFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.editFormVisible=$event}}},[_c('el-form',{ref:\"editForm\",attrs:{\"model\":_vm.editForm,\"label-width\":\"80px\",\"rules\":_vm.editFormRules}},[_c('el-form-item',{attrs:{\"label\":\"项目名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.editForm.name),callback:function ($$v) {_vm.$set(_vm.editForm, \"name\", $$v)},expression:\"editForm.name\"}})],1),_c('el-row',{attrs:{\"gutter\":24}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"类型\",\"prop\":\"type\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.editForm.proj_type),callback:function ($$v) {_vm.$set(_vm.editForm, \"proj_type\", $$v)},expression:\"editForm.proj_type\"}},_vm._l((_vm.options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"版本号\",\"prop\":\"version\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.editForm.version),callback:function ($$v) {_vm.$set(_vm.editForm, \"version\", $$v)},expression:\"editForm.version\"}})],1)],1)],1),_c('el-form-item',{attrs:{\"label\":\"描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":6},model:{value:(_vm.editForm.description),callback:function ($$v) {_vm.$set(_vm.editForm, \"description\", $$v)},expression:\"editForm.description\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.editFormVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.editLoading},nativeOn:{\"click\":function($event){return _vm.editSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_c('el-dialog',{staticStyle:{\"width\":\"75%\",\"left\":\"12.5%\"},attrs:{\"title\":\"注册模型\",\"visible\":_vm.addFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.addFormVisible=$event}}},[_c('el-form',{ref:\"addForm\",attrs:{\"model\":_vm.addForm,\"label-width\":\"80px\",\"rules\":_vm.addFormRules}},[_c('el-form-item',{attrs:{\"label\":\"模型名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addForm.name),callback:function ($$v) {_vm.$set(_vm.addForm, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"addForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"模型描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":6},model:{value:(_vm.addForm.description),callback:function ($$v) {_vm.$set(_vm.addForm, \"description\", $$v)},expression:\"addForm.description\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.addFormVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.addLoading},nativeOn:{\"click\":function($event){return _vm.addSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_c('br')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <section style=\"margin-left:15px;margin-right:15px;margin-top: 15px;\">\n    <el-card class=\"box-card\">\n      <el-menu :default-active=\"activeIndex\"\n      class=\"el-menu-demo\"\n      menu-trigger=\"click\"\n      mode=\"horizontal\"\n      router=true\n      @select=\"handleSelect\">\n      <el-menu-item index=\"/models\">模型部署与管理</el-menu-item>\n      <el-menu-item index=\"/experiments\">模型实验跟踪</el-menu-item>\n      <el-menu-item index=\"/features\">中央特征存储</el-menu-item>\n      </el-menu>\n      <br>\n      <!--工具条-->\n      <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px;\">\n          <el-form :inline=\"true\" :model=\"filters\" @submit.native.prevent>\n              <el-form-item>\n                  <el-input v-model=\"filters.name\" placeholder=\"名称\" @keyup.enter.native=\"getModelsList\"></el-input>\n              </el-form-item>\n              <el-form-item>\n                  <el-button type=\"primary\" @click=\"getModelsList\">查询</el-button>\n              </el-form-item>\n              <el-form-item>\n                  <el-button type=\"primary\" @click=\"handleAdd\" icon=\"el-icon-plus\">注册模型</el-button>\n              </el-form-item>\n              <el-form-item>\n                  <el-button type=\"primary\" @click=\"handleSingleCheck\" icon=\"el-icon-magic-stick\">服务状态</el-button>\n              </el-form-item>\n          </el-form>\n      </el-col>\n\n      <!--列表-->\n      <el-table :data=\"models\" highlight-current-row v-loading=\"listLoading\" @selection-change=\"selsChange\" style=\"width: 100%;\">\n        <el-table-column>\n          <template slot-scope=\"scope\">\n            <el-card class=\"box-card\" shadow=\"hover\">\n          <el-descriptions class=\"margin-top\" title=\"\" :column=\"3\" :size=\"size\">\n            <template slot=\"title\">\n            <router-link  :to=\"{ name: '模型版本管理', params: {model_name: scope.row.name}}\"\n                style=\"cursor:pointer;color: #0000FF;text-decoration:underline\">\n                      {{ scope.row.name }}\n            </router-link>\n          </template>\n             <template slot=\"extra\">\n                <el-button type=\"text\" size=\"small\" style=\"color:#808B96\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n            </template>\n           <el-descriptions-item label=\"最近更新时间\">{{scope.row.last_updated_timestamp | formatDate}}</el-descriptions-item>\n        <el-descriptions-item label=\"生产版本\">{{scope.row.latest_version_prodcution || '暂无'}}</el-descriptions-item>\n    <el-descriptions-item label=\"最新版本\">{{scope.row.latest_version  || '暂无'}}</el-descriptions-item>\n    <el-descriptions-item label=\"标签\">\n      <el-tag size=\"small\" type=\"info\">{{scope.row.tags  || '暂无'}}</el-tag>\n    </el-descriptions-item>\n  <el-descriptions-item label=\"模型描述\">{{scope.row.description}}</el-descriptions-item>\n  <el-descriptions-item label=\"生产端口\">{{model_meta[scope.row.name].port}}</el-descriptions-item>\n  <el-descriptions-item label=\"服务状态\">\n    <el-tag type=\"success\" size=\"small\" v-if=\"model_meta[scope.row.name].status==='running'\">服务中</el-tag>\n    <el-tag type=\"info\" size=\"small\" v-else-if=\"model_meta[scope.row.name].port==='null'\">未部署</el-tag>\n    <el-tag type=\"danger\" size=\"small\" v-else>已停止</el-tag>\n    <el-link type=\"primary\" style=\"margin-left:5px\" @click=\"handleSingleCheck(scope.$index, scope.row)\">\n      <i class=\"el-icon-magic-stick\"></i>检查状态\n    </el-link>\n  </el-descriptions-item>\n</el-descriptions>\n</el-card>\n</template>\n  </el-table-column>\n      </el-table>\n      <!--工具条-->\n      <el-col :span=\"24\" class=\"toolbar\">\n          <el-pagination layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\" :page-size=\"10\" :page-count=\"total\" style=\"float:right;\">\n          </el-pagination>\n      </el-col>\n    </el-card>\n      <!--编辑界面-->\n      <el-dialog title=\"编辑\" :visible.sync=\"editFormVisible\" :close-on-click-modal=\"false\" style=\"width: 75%; left: 12.5%\">\n          <el-form :model=\"editForm\" label-width=\"80px\"  :rules=\"editFormRules\" ref=\"editForm\">\n              <el-form-item label=\"项目名称\" prop=\"name\">\n                  <el-input v-model=\"editForm.name\" auto-complete=\"off\"></el-input>\n              </el-form-item>\n              <el-row :gutter=\"24\">\n                  <el-col :span=\"12\">\n                      <el-form-item label=\"类型\" prop='type'>\n                          <el-select v-model=\"editForm.proj_type\" placeholder=\"请选择\">\n                              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                              </el-option>\n                          </el-select>\n                      </el-form-item>\n                  </el-col>\n                  <el-col :span=\"12\">\n                      <el-form-item label=\"版本号\" prop='version'>\n                          <el-input v-model=\"editForm.version\" auto-complete=\"off\"></el-input>\n                      </el-form-item>\n                  </el-col>\n              </el-row>\n              <el-form-item label=\"描述\" prop='description'>\n                  <el-input type=\"textarea\" :rows=\"6\" v-model=\"editForm.description\"></el-input>\n              </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n              <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n          </div>\n      </el-dialog>\n\n      <!--新增界面-->\n      <el-dialog title=\"注册模型\" :visible.sync=\"addFormVisible\" :close-on-click-modal=\"false\" style=\"width: 75%; left: 12.5%\">\n          <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\n              <el-form-item label=\"模型名称\" prop=\"name\">\n                  <el-input v-model.trim=\"addForm.name\" auto-complete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"模型描述\" prop='description'>\n                  <el-input type=\"textarea\" :rows=\"6\" v-model=\"addForm.description\"></el-input>\n              </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n              <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\n          </div>\n      </el-dialog>\n      <br>\n  </section>\n</template>\n\n<script>\n// import NProgress from 'nprogress'\nimport $ from 'jquery'\nimport moment from 'moment'\nimport { test,\n  RegisterModel,\n  getRegisteredModels,\n  delRegisteredModel,\n  updateProject } from '@/api/api'\n// import ElRow from \"element-ui/packages/row/src/row\";\nexport default {\n// components: {ElRow},\n  data () {\n    return {\n      model_meta: {},\n      activeIndex: '/models',\n      size: '',\n      users: {},\n      filters: {\n        name: ''\n      },\n      models: [],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [], // 列表选中列\n      editFormVisible: false, // 编辑界面是否显示\n      editLoading: false,\n      options: [{ label: '策略推荐', value: 'recs' },\n        { label: '个性化促销', value: 'promotions' },\n        { label: '通用', value: 'general' }],\n      editFormRules: {\n        name: [\n          { required: true, message: '请输入名称', trigger: 'blur' },\n          { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n        ],\n        proj_type: [\n          { required: true, message: '请选择类型', trigger: 'blur' }\n        ],\n        version: [\n          { required: true, message: '请输入版本号', trigger: 'blur' },\n          { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n        ],\n        description: [\n          { required: false, message: '请输入描述', trigger: 'blur' },\n          { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n        ]\n      },\n      // 编辑界面数据\n      editForm: {\n        name: '',\n        version: '',\n        proj_type: '',\n        description: ''\n      },\n      addFormVisible: false, // 新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        name: [\n          { required: true, message: '请输入名称', trigger: 'blur' },\n          { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n        ],\n        type: [\n          { required: true, message: '请选择类型', trigger: 'blur' }\n        ],\n        version: [\n          { required: true, message: '请输入版本号', trigger: 'blur' },\n          { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n        ],\n        description: [\n          { required: false, message: '请输入版本号', trigger: 'blur' },\n          { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n        ]\n      },\n      // 新增界面数据\n      addForm: {\n        name: '',\n        version: '',\n        type: '',\n        description: ''\n      }\n    }\n  },\n  filters: {\n    formatDate: function (value) {\n      let date = new Date(value)\n      let y = date.getFullYear()\n      let MM = date.getMonth() + 1\n      MM = MM < 10 ? ('0' + MM) : MM\n      let d = date.getDate()\n      d = d < 10 ? ('0' + d) : d\n      let h = date.getHours()\n      h = h < 10 ? ('0' + h) : h\n      let m = date.getMinutes()\n      m = m < 10 ? ('0' + m) : m\n      let s = date.getSeconds()\n      s = s < 10 ? ('0' + s) : s\n      return y + '-' + MM + '-' + d + ' ' + h + ':' + m + ':' + s\n    }\n  },\n  methods: {\n    checkModelService (model, ifall) {\n      // NProgress.start();\n      let self = this\n      $.ajax({\n        type: 'post',\n        url: test + '/api/models/check_service_status',\n        async: true,\n        data: JSON.stringify({\n          model_name: model,\n          ifall: ifall,\n          user_name: JSON.parse(sessionStorage.getItem('name'))\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        },\n        timeout: 5000,\n        success: function (data) {\n          // data.data.model_meta['model_name']\n          self.ifall = data.data.ifall\n          if (self.ifall === 'no') { self.model_meta[data.data.model_meta['model_name']] = data.data.model_meta } else {\n            self.model_meta = data.data.model_meta\n          }\n          console.log(data, 'self.model_meta_check')\n        }\n      })\n    },\n    openCheck (tagstyle, ifall, model) {\n      const h = this.$createElement\n      this.$msgbox({\n        title: 'Model Service',\n        message: h('div', null, [\n          h('span', null, '待检服务'),\n          h('i', { style: 'color: teal', class: 'el-icon-right' }),\n          h('strong', null, ' '),\n          // h('span', { style: tagstyle, size: 'medium' }, cmdSpace)\n          h('span', { class: tagstyle }, [h('strong', null, model)])\n        ]),\n        showCancelButton: true,\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        beforeClose: (action, instance, done) => {\n          if (action === 'confirm') {\n            instance.confirmButtonLoading = true\n            instance.confirmButtonText = '检测中...'\n            setTimeout(() => {\n              done()\n              this.checkModelService(model, ifall)\n              // this.transformModelStagef(cmd)\n              setTimeout(() => {\n                instance.confirmButtonLoading = false\n              }, 30)\n            }, 300)\n          } else {\n            done()\n          }\n        }\n      }).then((action) => {\n        console.log('模型状态转换成功')\n        // this.$message({\n        //  type: 'success',\n        //  message: '模型状态转换成功'\n        // })\n      })\n    },\n    handleSingleCheck (index, row) {\n      console.log(index, row, 'ttt', (typeof index), 'check')\n      if ((typeof index) === 'number') {\n        // this.model_meta[row.name].status = 'running'\n        this.model = row.name\n        this.ifall = 'no'\n      } else {\n        this.model = 'all model'\n        this.ifall = 'yes'\n        console.log(this.model, 'checkm')\n      }\n      this.openCheck('tagstyle', this.ifall, this.model)\n    },\n    handleSelect (key, keyPath) {\n      this.activeIndex = key\n      console.log(key, keyPath)\n    },\n    // row[column.property] 能读取到该行该列的数据。代码中实现了时间格式的转换\n    formatTime2 (row, column) {\n      const date = new Date(row[column.property])\n      return date.getFullYear() + '-' +\n                  date.getMonth() + '-' +\n                  date.getDate() + ' ' +\n                  date.getHours() + ':' +\n                  date.getMinutes() + ':' +\n                  date.getSeconds()\n    },\n    formatTime: function (row, column) { // 日期格式化\n      var date = row[column.property]\n      if (typeof date === 'undefined') {\n        return ''\n      }\n      return moment(date).format('YYYY-MM-DD HH:mm:ss')\n    },\n    getUserInfo () {\n      let self = this\n      let param = { project_id: self.$route.params.project_id }\n      $.ajax({\n        type: 'get',\n        // url: test+\"/api/api/api_info\",\n        url: test + '/api/user/get_user_meta',\n        async: true,\n        data: param,\n        headers: {\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        },\n        timeout: 5000,\n        success: function (data) {\n          if (data.code === '999999') {\n            self.users = data.data.users\n            console.log(self.users, 'self.users')\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            })\n          }\n        }\n      })\n    },\n    // 获取项目列表\n    getModelsList () {\n      this.listLoading = true\n      let self = this\n      let params = { page: self.page,\n        user_key: JSON.parse(sessionStorage.getItem('name')),\n        name: self.filters.name }\n      // let headers = {Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))};\n      let headers = {\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      }\n      getRegisteredModels(headers, params).then((res) => {\n        self.listLoading = false\n        let { msg, code, data } = res\n        if (code === '999999') {\n          self.total = data.total\n          self.models = data.data\n          self.model_meta = data.model_meta\n          console.log(self.models, 'self.models')\n          console.log(self.total, 'self.total')\n          console.log(self.model_meta, 'self.model_meta')\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          })\n        }\n      })\n    },\n    // 删除\n    handleDel: function (index, row) {\n      this.$confirm('确认删除该活动吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true\n        // NProgress.start();\n        let self = this\n        let params = { ids: [row.id],\n          user_name: JSON.parse(sessionStorage.getItem('name')) }\n        let header = {\n          'Content-Type': 'application/json',\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        }\n        delRegisteredModel(header, params).then(_data => {\n          let { msg, code } = _data\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            })\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            })\n          }\n          self.getModelsList()\n        })\n      })\n    },\n    handleCurrentChange (val) {\n      this.page = val\n      this.getModelsList()\n    },\n    // 显示编辑界面\n    handleEdit: function (index, row) {\n      this.editFormVisible = true\n      this.editForm = Object.assign({}, row)\n    // console.log(\"row\",row)\n    },\n    // 显示新增界面\n    handleAdd: function () {\n      this.addFormVisible = true\n    },\n    // 编辑\n    editSubmit: function () {\n      let self = this\n      this.$refs.editForm.validate((valid) => {\n        if (valid) {\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            self.editLoading = true\n            // NProgress.start();\n            let params = {\n              project_id: self.editForm.id,\n              name: self.editForm.name,\n              type: self.editForm.proj_type,\n              version: self.editForm.version,\n              description: self.editForm.description,\n              user_key: JSON.parse(sessionStorage.getItem('name'))\n            }\n            let header = {\n              'Content-Type': 'application/json',\n              Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n            }\n            updateProject(header, params).then(_data => {\n              let { msg, code } = _data\n              self.editLoading = false\n              if (code === '999999') {\n                self.$message({\n                  message: '修改成功',\n                  center: true,\n                  type: 'success'\n                })\n                self.$refs['editForm'].resetFields()\n                self.editFormVisible = false\n                self.getModelsList()\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n              }\n            })\n          })\n        }\n      })\n    },\n    // 新增\n    addSubmit: function () {\n      this.$refs.addForm.validate((valid) => {\n        if (valid) {\n          let self = this\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            self.addLoading = true\n            // NProgress.start();\n            let params = JSON.stringify({\n              model_name: self.addForm.name,\n              description: self.addForm.description,\n              user_name: JSON.parse(sessionStorage.getItem('name'))\n            })\n            let header = {\n              'Content-Type': 'application/json',\n              Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n            }\n            RegisterModel(header, params).then(_data => {\n              let { msg, code } = _data\n              self.addLoading = false\n              if (code === '999999') {\n                self.$message({\n                  message: '添加成功',\n                  center: true,\n                  type: 'success'\n                })\n                self.$refs['addForm'].resetFields()\n                self.addFormVisible = false\n                self.getModelsList()\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                })\n                self.$refs['addForm'].resetFields()\n                self.addFormVisible = false\n                self.getModelsList()\n              }\n            })\n          })\n        }\n      })\n    },\n    selsChange: function (sels) {\n      this.sels = sels\n    }\n  },\n  mounted () {\n    this.getModelsList()\n    // this.getUserInfo()\n  /* var token = sessionStorage.getItem(\"token\");\n          var user = sessionStorage.getItem(\"name\");\n          if (token && user) {\n              user = JSON.parse(user);\n              this.sysUserName = user || \"\";\n          } else {\n              sessionStorage.removeItem(\"token\");\n              this.$router.push(\"/login\");\n          } */\n  }\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RegisteredModelsPage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RegisteredModelsPage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RegisteredModelsPage.vue?vue&type=template&id=1c1c2bb4&\"\nimport script from \"./RegisteredModelsPage.vue?vue&type=script&lang=js&\"\nexport * from \"./RegisteredModelsPage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}