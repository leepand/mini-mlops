{"version":3,"sources":["webpack:///./src/views/marketing-registry/abCaseDetails.vue?b859","webpack:///./src/views/marketing-registry/abCaseDetails.vue?7e09","webpack:///src/views/marketing-registry/abCaseDetails.vue","webpack:///./src/views/marketing-registry/abCaseDetails.vue?0b8b","webpack:///./src/views/marketing-registry/abCaseDetails.vue?c80c"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","staticClass","attrs","size","slot","_v","_s","expMetaData","abname","name","params","campaign_id","$route","camp_name","app_type","ab_dynamic_description","creation_date","on","handleChange","model","value","callback","$$v","activeNames","expression","nativeOn","$event","pauseExp","is_paused","style","display","stopVisible","stopExp","handleEdit","description","resetWinner","resetExp","abkpi","_l","item","key","height","width","time","period","label","directives","rawName","tableData","tableRowStyle","scopedSlots","_u","fn","scope","row","_e","completed_count","participant_count","conversion_rate","toFixed","confidence_interval","confidence_level","is_winner","handleSetWinner","$index","None","editFormVisible","ref","editForm","editFormRules","$set","editLoading","editSubmit","staticRenderFns","data","filters","listLoading","elapsedTime","host","KPIs","options","pass","fail","error","is_archived","abChartName","abChartX","abChartY","required","message","trigger","max","version","type","mounted","getAbExpMeta","getTestResult","methods","self","$","ajax","url","test","async","ab_id","toString","headers","Authorization","JSON","parse","sessionStorage","getItem","timeout","success","code","console","log","$message","msg","center","back","$router","go","_this","$confirm","then","param","stringify","Number","catch","_this2","index","desc","Object","assign","_this3","_this4","_this5","altname","user_name","absetWinner","_data","getTestResultList","alternatives","kpis","length","forEach","push","YData","lenofData","i","rate","itemXY","date","conversions","participants","isNaN","drawLine","myChart","echarts","document","getElementById","option","title","text","left","top","textStyle","color","tooltip","axisPointer","crossStyle","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","xAxis","yAxis","scale","axisLabel","formatter","series","setOption","singleTestDraw","x","orient","right","bottom","radius","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","result","filterHandler","column","getTenTestTime","project_id","getTestTenTime","startTime","changeHost","getLatelyTenTestResult","getTestTenResult","latelyTenPass","latelyTenFail","latelyTenError","watch","component"],"mappings":"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","file":"js/chunk-3d8b9b1e.98b74ffb.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./abCaseDetails.vue?vue&type=style&index=0&id=78a3fdd7&prod&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticStyle:{\"margin-left\":\"15px\",\"margin-right\":\"15px\"}},[_c('el-divider'),_c('el-descriptions',{staticClass:\"margin-top\",attrs:{\"title\":\"\",\"column\":3,\"size\":_vm.size}},[_c('template',{slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.expMetaData.abname))])]),_c('template',{slot:\"extra\"},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":{ name: '活动管理', params: {campaign_id: this.$route.params.campaign_id}}}},[_c('el-button',{staticClass:\"return-list\"},[_c('i',{staticClass:\"el-icon-arrow-left\",staticStyle:{\"margin-right\":\"5px\"}}),_vm._v(\"返回实验组\")])],1)],1),_c('el-descriptions-item',{attrs:{\"label\":\"活动名称\"}},[_vm._v(_vm._s(_vm.expMetaData.camp_name))]),_c('el-descriptions-item',{attrs:{\"label\":\"实验名称\"}},[_vm._v(_vm._s(_vm.expMetaData.abname))]),_c('el-descriptions-item',{attrs:{\"label\":\"实验类型\"}},[_c('el-tag',{attrs:{\"size\":\"small\"}},[_vm._v(_vm._s(_vm.expMetaData.app_type))])],1),(_vm.is_archived)?_c('el-descriptions-item',{attrs:{\"label\":\"实验状态\"}},[_c('el-tag',{attrs:{\"type\":\"info\",\"size\":\"small\"}},[_vm._v(\"已废弃\")])],1):(_vm.is_paused)?_c('el-descriptions-item',{attrs:{\"label\":\"实验状态\"}},[_c('el-tag',{attrs:{\"type\":\"info\",\"size\":\"small\"}},[_vm._v(\"已暂停\")])],1):_c('el-descriptions-item',{attrs:{\"label\":\"实验状态\"}},[_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"small\"}},[_vm._v(\"进行中\")])],1),_c('el-descriptions-item',{attrs:{\"label\":\"实验动态描述\"}},[_vm._v(_vm._s(_vm.expMetaData.ab_dynamic_description))]),_c('el-descriptions-item',{attrs:{\"label\":\"创建于\"}},[_vm._v(_vm._s(_vm.expMetaData.creation_date))])],2),_c('el-collapse',{staticStyle:{\"margin-bottom\":\"20px\"},on:{\"change\":_vm.handleChange},model:{value:(_vm.activeNames),callback:function ($$v) {_vm.activeNames=$$v},expression:\"activeNames\"}},[_c('el-collapse-item',{attrs:{\"title\":\"实时实验数据统计\",\"name\":\"1\"}},[_c('div',{staticStyle:{\"float\":\"right\"}},[_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"type\":\"primary\"},nativeOn:{\"click\":function($event){return _vm.pauseExp($event)}}},[_vm._v(_vm._s(_vm.is_paused===false?'暂停实验':'开始实验'))]),_c('el-button',{style:({ display: _vm.stopVisible }),attrs:{\"type\":\"primary\"},on:{\"click\":_vm.stopExp}},[_vm._v(\"停止实验\")]),_c('el-button',{attrs:{\"type\":\"primary\"},nativeOn:{\"click\":function($event){return _vm.handleEdit('index',{description:'description'})}}},[_vm._v(\"编辑实验描述\")]),_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"type\":\"primary\"},nativeOn:{\"click\":function($event){return _vm.resetWinner($event)}}},[_c('div',[_vm._v(\"重选获胜组\")])]),_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.resetExp}},[_c('div',[_vm._v(\"重设实验\")])]),_c('el-select',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"placeholder\":\"请选择KPI指标\"},model:{value:(_vm.abkpi),callback:function ($$v) {_vm.abkpi=$$v},expression:\"abkpi\"}},_vm._l((_vm.KPIs),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}),1)],1),_c('br'),_c('el-row',{staticClass:\"topmargin\",attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('div',{style:({height: '400px',width:'1000px'}),attrs:{\"id\":\"myChart\"}})])],1),_c('p',{staticStyle:{\"padding-left\":\"50px\",\"color\":\"#999\"}},[_vm._v(\"*注\"),_c('strong',[_vm._v(\": \")]),_vm._v(\"天/月/年\")]),_c('el-row',[_c('el-col',{attrs:{\"span\":4}},[_c('el-select',{staticStyle:{\"padding-left\":\"50px\",\"padding-bottom\":\"10px\"},attrs:{\"placeholder\":\"请选择时间周期\"},model:{value:(_vm.time),callback:function ($$v) {_vm.time=$$v},expression:\"time\"}},_vm._l((_vm.options),function(item){return _c('el-option',{key:item.period,attrs:{\"label\":item.label,\"value\":item.period}})}),1)],1)],1),_c('div',{staticStyle:{\"padding-left\":\"50px\",\"width\":\"96%\"}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],attrs:{\"data\":_vm.tableData,\"row-style\":_vm.tableRowStyle}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"实验用例名称\",\"min-width\":\"20%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticStyle:{\"font-size\":\"16px\"}},[_vm._v(_vm._s(scope.row.name))]),_vm._v(\" \"),(scope.row.is_control)?_c('span',{staticClass:\"abcontrol\"},[_vm._v(_vm._s(scope.row.app_type===false?'':'控制组'))]):_vm._e()]}}])}),_c('el-table-column',{attrs:{\"prop\":\"data\",\"label\":\"转化情况\",\"min-width\":\"20%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                      \"+_vm._s(scope.row.completed_count)+\" / \"+_vm._s(scope.row.participant_count)+\"\\n                  \")]}}])}),_c('el-table-column',{attrs:{\"prop\":\"conversion_rate\",\"label\":\"转化率\",\"min-width\":\"20%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                      \"+_vm._s(scope.row.conversion_rate.toFixed(2))+\" ± \"+_vm._s(scope.row.confidence_interval.toFixed(1))+\"%\\n                  \")]}}])}),_c('el-table-column',{attrs:{\"prop\":\"confidence_level\",\"label\":\"置信度\",\"min-width\":\"25%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.confidence_level === 'N/A')?_c('a',[_vm._v(\"—\")]):_c('a',[_vm._v(_vm._s(scope.row.confidence_level))])]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"15%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(!scope.row.is_winner)?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleSetWinner(scope.$index,scope.row)}}},[_vm._v(\"use this\")]):_vm._e(),(scope.row.is_winner)?_c('span',{staticClass:\"abwinner\"},[_vm._v(_vm._s(scope.row.is_winner===_vm.None?'':'Winner!'))]):_vm._e()]}}])})],1)],1),_c('div',{staticStyle:{\"margin-top\":\"5%\"}})],1)],1),_c('el-dialog',{staticStyle:{\"width\":\"75%\",\"left\":\"12.5%\"},attrs:{\"title\":\"编辑\",\"visible\":_vm.editFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.editFormVisible=$event}}},[_c('el-form',{ref:\"editForm\",attrs:{\"model\":_vm.editForm,\"label-width\":\"80px\",\"rules\":_vm.editFormRules}},[_c('el-form-item',{attrs:{\"label\":\"实验描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":6},model:{value:(_vm.editForm.description),callback:function ($$v) {_vm.$set(_vm.editForm, \"description\", $$v)},expression:\"editForm.description\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.editFormVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.editLoading},nativeOn:{\"click\":function($event){return _vm.editSubmit($event)}}},[_vm._v(\"提交\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <section style=\"margin-left:15px;margin-right:15px;\">\n    <el-divider></el-divider>\n    <el-descriptions class=\"margin-top\" title=\"\" :column=\"3\" :size=\"size\">\n      <template slot=\"title\">\n      <span>{{ expMetaData.abname }}</span>\n      </template>\n    <template slot=\"extra\">\n      <router-link :to=\"{ name: '活动管理', params: {campaign_id: this.$route.params.campaign_id}}\" style=\"text-decoration: none;color: aliceblue;\">\n          <el-button class=\"return-list\"><i class=\"el-icon-arrow-left\" style=\"margin-right: 5px\"></i>返回实验组</el-button>\n      </router-link>\n    </template>\n    <el-descriptions-item label=\"活动名称\">{{expMetaData.camp_name}}</el-descriptions-item>\n    <el-descriptions-item label=\"实验名称\">{{ expMetaData.abname }}</el-descriptions-item>\n    <el-descriptions-item label=\"实验类型\"><el-tag size=\"small\">{{ expMetaData.app_type }}</el-tag></el-descriptions-item>\n    <el-descriptions-item v-if=\"is_archived\" label=\"实验状态\"><el-tag type=\"info\" size=\"small\">已废弃</el-tag></el-descriptions-item>\n    <el-descriptions-item v-else-if=\"is_paused\" label=\"实验状态\"><el-tag type=\"info\" size=\"small\">已暂停</el-tag></el-descriptions-item>\n    <el-descriptions-item v-else label=\"实验状态\"><el-tag type=\"success\" size=\"small\">进行中</el-tag></el-descriptions-item>\n    <el-descriptions-item label=\"实验动态描述\">{{ expMetaData.ab_dynamic_description }}</el-descriptions-item>\n    <el-descriptions-item label=\"创建于\">{{ expMetaData.creation_date }}</el-descriptions-item>\n  </el-descriptions>\n  <el-collapse v-model=\"activeNames\" @change=\"handleChange\" style=\"margin-bottom:20px\">\n  <el-collapse-item title=\"实时实验数据统计\" name=\"1\">\n    <div style=\"float: right\">\n      <el-button type=\"primary\"   @click.native=\"pauseExp\" style=\"margin-left:10px\">{{is_paused===false?'暂停实验':'开始实验'}}</el-button>\n      <el-button type=\"primary\" :style=\"{ display: stopVisible }\" @click=\"stopExp\">停止实验</el-button>\n      <!--<router-link :to=\"{ name: '添加新接口'}\" style='text-decoration: none;color: #000000;'>\n          <el-button type=\"primary\" style=\"margin-left:10px\">编辑实验描述</el-button>\n      </router-link>-->\n      <el-button type=\"primary\" @click.native=\"handleEdit('index',{description:'description'})\">编辑实验描述</el-button>\n      <el-button type=\"primary\" @click.native=\"resetWinner\" style=\"margin-left:10px\"><div>重选获胜组</div></el-button>\n      <el-button type=\"primary\" @click=\"resetExp\" style=\"margin-left:10px\"><div>重设实验</div></el-button>\n      <el-select v-model=\"abkpi\"  placeholder=\"请选择KPI指标\" style=\"margin-left:10px\">\n          <el-option v-for=\"(item) in KPIs\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n      </el-select>\n    </div>\n\n    <br>\n      <el-row :gutter=\"20\" class=\"topmargin\">\n          <el-col :span=\"12\">\n              <!--<span style=\"padding-left: 40px;color:#999\">实验描述:&nbsp;{{description}}</span>-->\n              <!--<div>-->\n              <!--<span style=\"padding-left: 40px;color:#999\">状态:&nbsp;{{is_archived===false?'否':'已回收'}}</span>\n              <span style=\"padding-left: 40px;color:#999\">状态:&nbsp;{{is_paused===false?'否':'已暂停'}}</span>-->\n              <!--<span style=\"padding-left: 40px;color:#999\">实验状态:&nbsp;<span style=\"padding: 2px;font-size: 8px;color: #fff;background-color: #FF6600;\">{{is_paused===false && is_archived===false?'进行中':'已经暂停或停止'}}</span></span>-->\n             <!--</div>-->\n              <div id=\"myChart\" :style=\"{height: '400px',width:'1000px'}\"></div>\n          </el-col>\n      </el-row>\n      <p style=\"padding-left: 50px;color:#999\">*注<strong>:&nbsp;</strong>天/月/年</p>\n      <el-row>\n          <el-col :span=\"4\">\n              <el-select v-model=\"time\" placeholder=\"请选择时间周期\" style=\"padding-left: 50px;padding-bottom: 10px\">\n                  <el-option v-for=\"item in options\" :key=\"item.period\" :label=\"item.label\" :value=\"item.period\">\n                  </el-option>\n              </el-select>\n          </el-col>\n      </el-row>\n      <div style=\"padding-left: 50px;width: 96%\">\n          <el-table :data=\"tableData\" v-loading=\"listLoading\" :row-style=\"tableRowStyle\">\n              <el-table-column type=\"index\" label=\"#\" width=\"100\">\n              </el-table-column>\n              <el-table-column prop=\"name\" label=\"实验用例名称\" min-width=\"20%\" sortable show-overflow-tooltip>\n                  <template slot-scope=\"scope\">\n                      <span style=\"font-size: 16px\">{{scope.row.name}}</span>&nbsp;<span class=\"abcontrol\" v-if=\"scope.row.is_control\">{{scope.row.app_type===false?'':'控制组'}}</span>\n                  </template>\n              </el-table-column>\n              <el-table-column prop=\"data\" label=\"转化情况\" min-width=\"20%\" sortable show-overflow-tooltip>\n                  <template slot-scope=\"scope\">\n                      {{scope.row.completed_count}} / {{scope.row.participant_count}}\n                  </template>\n              </el-table-column>\n              <el-table-column prop=\"conversion_rate\" label=\"转化率\" min-width=\"20%\" sortable show-overflow-tooltip>\n                  <template slot-scope=\"scope\">\n                      {{scope.row.conversion_rate.toFixed(2)}} &plusmn; {{scope.row.confidence_interval.toFixed(1)}}%\n                  </template>\n\n              </el-table-column>\n              <el-table-column prop=\"confidence_level\" label=\"置信度\" min-width=\"25%\" sortable show-overflow-tooltip>\n                  <template slot-scope=\"scope\">\n                      <a v-if=\"scope.row.confidence_level === 'N/A'\">—</a>\n                      <a v-else>{{ scope.row.confidence_level }}</a>\n                  </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" min-width=\"15%\">\n                  <template slot-scope=\"scope\">\n                      <!--<el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                      <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>-->\n                      <el-button v-if=\"!scope.row.is_winner\" type=\"success\" size=\"small\" @click=\"handleSetWinner(scope.$index,scope.row)\">use this</el-button>\n                      <span class=\"abwinner\" v-if=\"scope.row.is_winner\">{{scope.row.is_winner===None?'':'Winner!'}}</span>\n                      <!--<el-button v-if=\"!scope.row.status\" type=\"info\" size=\"small\"  @click=\"handleChangeStatus(scope.$index,scope.row)\">winner</el-button>-->\n                  </template>\n          </el-table-column>\n\n          </el-table>\n      </div>\n      <div style=\"margin-top: 5%\"></div>\n\n  </el-collapse-item>\n</el-collapse>\n      <!--<router-link :to=\"{ name: '实验列表', params: {project_id: this.$route.params.project_id}}\" style='text-decoration: none;color: aliceblue;'>\n          <el-button class=\"return-list\"><i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>实验列表</el-button>\n      </router-link><i class=\"el-icon-plus\" style=\"margin-right: 5px;margin-left:10px\"></i>-->\n      <!--<el-button class=\"return-list\" @click=\"back\"><i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>实验用例列表</el-button>-->\n\n      <!--编辑界面-->\n      <el-dialog title=\"编辑\" :visible.sync=\"editFormVisible\" :close-on-click-modal=\"false\" style=\"width: 75%; left: 12.5%\">\n          <el-form :model=\"editForm\" label-width=\"80px\"  :rules=\"editFormRules\" ref=\"editForm\">\n              <el-form-item label=\"实验描述\" prop='description'>\n                  <el-input type=\"textarea\" :rows=\"6\" v-model=\"editForm.description\"></el-input>\n              </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n              <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n          </div>\n      </el-dialog>\n\n  </section>\n</template>\n\n<!--<script src=\"https://cdnjs.cloudflare.com/ajax/libs/echarts/4.3.0/echarts.min.js\"></script>-->\n\n<script>\n\n// import echarts from 'echarts'\nimport * as echarts from 'echarts'\n\nimport { test, getTestResultList, getTestTenTime, getTestTenResult, absetWinner } from '@/api/api'\nimport $ from 'jquery'\nexport default {\n  data () {\n    return {\n      activeNames: ['1'],\n      expMetaData: {},\n      filters: {\n        name: ''\n      },\n      tableData: [],\n      listLoading: false,\n      time: '',\n      elapsedTime: '',\n      host: '',\n      description: '',\n      abkpi: '',\n      KPIs: [],\n      options: [{ 'period': 'day', 'label': '今天' },\n        { 'period': 'month', 'label': '近一个月' },\n        { 'period': 'year', 'label': '近一年' }],\n      pass: '',\n      fail: '',\n      error: '',\n      is_archived: false,\n      is_paused: false,\n      abChartName: [],\n      abChartX: [],\n      abChartY: [],\n      stopVisible: '',\n      editLoading: false,\n      editFormVisible: false,\n      editFormRules: {\n        description: [\n          { required: false, message: '请输入描述', trigger: 'blur' },\n          { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n        ]\n      },\n      // 编辑界面数据\n      editForm: {\n        name: '',\n        version: '',\n        type: '',\n        description: ''\n      }\n    }\n  },\n  mounted () {\n    this.getAbExpMeta()\n\n    // this.getTenTestTime();\n    // this.getLatelyTenTestResult();\n    this.getTestResult()\n  // this.drawLine();\n  // this.getAbKPIs();\n  },\n  methods: {\n    // 实验元数据\n    getAbExpMeta () {\n      let self = this\n      $.ajax({\n        type: 'get',\n        url: test + '/api/campaigns/get_abexp_metadata',\n        async: true,\n        data: { ab_id: this.$route.params.ab_id,\n          abkpi: self.abkpi.toString() },\n        headers: {\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        },\n        timeout: 5000,\n        success: function (data) {\n          if (data.code === '999999') {\n            self.expMetaData = data.data.data\n            console.log(self.expMetaData, 'this.expMetaData')\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            })\n          }\n        }\n      })\n    },\n    back () {\n      this.$router.go(-1) // 返回上一层\n    },\n    stopExp () {\n    // let ids = this.sels.map(item => item.id);\n      let self = this\n      this.$confirm('确认提交操作吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        self.stopVisible = 'none'\n        // NProgress.start();\n        let param = JSON.stringify({\n          campaign_id: Number(this.$route.params.campaign_id),\n          ab_id: Number(this.$route.params.ab_id)\n        })\n        $.ajax({\n          type: 'post',\n          url: test + '/api/abtesting/report/stop_exp',\n          async: true,\n          data: param,\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n          },\n          timeout: 5000,\n          success: function (data) {\n            if (data.code === '999999') {\n              self.$message({\n                message: data.msg,\n                center: true,\n                type: 'success'\n              })\n            } else {\n              self.$message.error({\n                message: data.msg,\n                center: true\n              })\n            }\n            self.getTestResult()\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    pauseExp () {\n    // let ids = this.sels.map(item => item.id);\n      let self = this\n      this.$confirm('确认提交操作吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n      // NProgress.start();\n        let param = JSON.stringify({\n          campaign_id: Number(this.$route.params.campaign_id),\n          ab_id: Number(this.$route.params.ab_id)\n        })\n        $.ajax({\n          type: 'post',\n          url: test + '/api/abtesting/report/pause_exp',\n          async: true,\n          data: param,\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n          },\n          timeout: 5000,\n          success: function (data) {\n            if (data.code === '999999') {\n              self.$message({\n                message: data.msg,\n                center: true,\n                type: 'success'\n              })\n            } else {\n              self.$message.error({\n                message: data.msg,\n                center: true\n              })\n            }\n            self.getTestResult()\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    // 显示编辑界面\n    handleEdit: function (index, row) {\n    // console.log(row,this.description,\"ddddd\")\n      this.editFormVisible = true\n      let desc = this.description\n      // this.editForm = Object.assign({}, row);\n      this.editForm = Object.assign({}, { description: desc })\n    },\n    editSubmit () {\n    // let ids = this.sels.map(item => item.id);\n      let self = this\n      this.$confirm('确认提交描述吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        self.editLoading = true\n        // NProgress.start();\n        let param = JSON.stringify({\n          campaign_id: Number(this.$route.params.campaign_id),\n          ab_id: Number(this.$route.params.ab_id),\n          abkpi: this.abkpi.toString(),\n          description: self.editForm.description\n        })\n        console.log(param, 'abnameabname')\n        $.ajax({\n          type: 'post',\n          url: test + '/api/abtesting/report/edit_ab_desc',\n          async: true,\n          data: param,\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n          },\n          timeout: 5000,\n          success: function (data) {\n            self.editLoading = false\n            if (data.code === '999999') {\n              self.$message({\n                message: '修改实验描述成功',\n                center: true,\n                type: 'success'\n              })\n            } else {\n              self.$message.error({\n                message: data.msg,\n                center: true\n              })\n            }\n            self.editFormVisible = false\n            self.getTestResult()\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    resetExp () {\n    // let ids = this.sels.map(item => item.id);\n      let self = this\n      this.$confirm('确认重置实验吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n      // NProgress.start();\n        let param = JSON.stringify({\n          campaign_id: Number(this.$route.params.campaign_id),\n          ab_id: Number(this.$route.params.ab_id)\n        })\n        console.log(param, 'abnameabname')\n        $.ajax({\n          type: 'post',\n          url: test + '/api/abtesting/report/reset_exp',\n          async: true,\n          data: param,\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n          },\n          timeout: 5000,\n          success: function (data) {\n          // self.searchApiListVisible = false;\n            if (data.code === '999999') {\n              self.$message({\n                message: '重置成功',\n                center: true,\n                type: 'success'\n              })\n            } else {\n              self.$message.error({\n                message: data.msg,\n                center: true\n              })\n            }\n            self.getTestResult()\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    resetWinner () {\n    // let ids = this.sels.map(item => item.id);\n      let self = this\n      this.$confirm('确认重置胜利组吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n      // NProgress.start();\n        let param = JSON.stringify({\n          campaign_id: Number(this.$route.params.campaign_id),\n          ab_id: Number(this.$route.params.ab_id) })\n        console.log(param, 'abnameabname')\n        $.ajax({\n          type: 'post',\n          url: test + '/api/abtesting/report/resetWinner',\n          async: true,\n          data: param,\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n          },\n          timeout: 5000,\n          success: function (data) {\n          // self.searchApiListVisible = false;\n            if (data.code === '999999') {\n              self.$message({\n                message: '重置成功',\n                center: true,\n                type: 'success'\n              })\n            } else {\n              self.$message.error({\n                message: data.msg,\n                center: true\n              })\n            }\n            self.getTestResult()\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    // 设置胜出模型\n    handleSetWinner: function (index, row) {\n      let self = this\n      this.listLoading = true\n      let params = {\n        campaign_id: this.$route.params.campaign_id,\n        altname: row.name.toString(),\n        ab_id: this.$route.params.ab_id,\n        user_name: JSON.parse(sessionStorage.getItem('name'))\n      }\n      console.log(params, 'setwinner')\n      let headers = {\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      }\n      if (row.is_winner) {\n        absetWinner(headers, params).then(_data => {\n          let { msg, code } = _data\n          self.listLoading = false\n          if (code === '999999') {\n            self.$message({\n              message: '取消胜出设置',\n              center: true,\n              type: 'success'\n            })\n            row.is_winner = !row.is_winner\n            self.getTestResult()\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            })\n          }\n        })\n      } else {\n        absetWinner(headers, params).then(_data => {\n          let { msg, code } = _data\n          self.listLoading = false\n          if (code === '999999') {\n            self.$message({\n              message: '设置胜出模型',\n              center: true,\n              type: 'success'\n            })\n            row.is_winner = !row.is_winner\n            self.getTestResult()\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            })\n          }\n        })\n      }\n    },\n    getTestResult () {\n      this.listLoading = true\n      let self = this\n      let params = {\n        campaign_id: this.$route.params.campaign_id,\n        ab_id: this.$route.params.ab_id,\n        abkpi: this.abkpi.toString(),\n        time: this.time.toString()\n      }\n      console.log(params, 'paramsparamsparamsparams')\n      let headers = {\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      }\n      getTestResultList(headers, params).then(_data => {\n        let { msg, code, data } = _data\n        self.listLoading = false\n        if (code === '999999') {\n          self.tableData = data.alternatives\n          self.description = data.description\n          self.is_archived = data.is_archived\n          self.is_paused = data.is_paused\n          self.KPIs = data.kpis\n          self.abChartY = []\n          if (data.alternatives[0].data.length > 6) {\n            data.alternatives.forEach((item) => {\n              self.abChartName.push(item.name)\n              let YData = []\n              self.abChartX = []\n              let lenofData = item.data.length\n              for (var i = lenofData - 7; i < lenofData; i++) {\n                let rate = 0.00\n                let itemXY = []\n                itemXY = item.data[i]\n                // console.log(itemXY,item.data,i,\"itemXY\")\n                self.abChartX.push(itemXY.date)\n                rate = Number(itemXY.conversions / itemXY.participants).toFixed(5) * 100\n                if (isNaN(rate)) rate = 0.00\n                YData.push(rate)\n              }\n              self.abChartY.push({ name: item.name,\n                type: 'line',\n                data: YData })\n            })\n          } else {\n            data.alternatives.forEach((item) => {\n              self.abChartName.push(item.name)\n              let YData = []\n              self.abChartX = []\n              item.data.forEach((itemXY) => {\n                let rate = 0.00\n                self.abChartX.push(itemXY.date)\n                rate = Number(itemXY.conversions / itemXY.participants).toFixed(5) * 100\n                if (isNaN(rate)) rate = 0.00\n                YData.push(rate)\n              })\n              self.abChartY.push({ name: item.name,\n                type: 'line',\n                data: YData })\n            })\n          }\n          console.log(data.alternatives, self.abChartY, 'dd')\n          self.drawLine() // new add\n          // self.singleTestDraw();\n          if (data.is_archived) {\n            self.stopVisible = 'none'\n          } else {\n            self.stopVisible = ''\n          }\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          })\n        }\n      })\n    },\n    drawLine () {\n      let myChart = echarts.init(document.getElementById('myChart'))\n      // 绘制图表\n      console.log('abchart')\n      let option = {\n        title: {\n          text: 'Conversion Rate',\n          left: 'center',\n          top: 20,\n          textStyle: {\n            color: '#ccc'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: ['line', 'bar'] },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        legend: {\n          data: this.abChartName\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: this.abChartX,\n            axisPointer: {\n              type: 'shadow'\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: '转化率',\n            scale: true,\n            // interval: 10,\n            axisLabel: {\n              formatter: '{value} %'\n            }\n          }\n        ],\n        series: this.abChartY\n      }\n      myChart.setOption(option)\n    },\n    singleTestDraw () {\n      let myChart = echarts.init(document.getElementById('singleTestChart'))\n      // 绘制图表\n      let option = {\n        title: {\n          text: '比例图',\n          x: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'vertical',\n          right: 10,\n          top: 20,\n          bottom: 20\n        },\n        toolbox: {\n          feature: {\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: ['line', 'bar'] },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        series: [\n          {\n          // name: '姓名',\n            type: 'pie',\n            radius: '50%',\n            center: ['50%', '50%'],\n            data: [\n            // {value:this.error, name:'ERROR'},\n            // {value:this.fail, name:'FAIL'},\n            // {value:this.pass, name:'PASS'},\n              { value: '90', name: 'ERROR' },\n              { value: '5', name: 'FAIL' },\n              { value: '5', name: 'PASS' }\n            ],\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      }\n      myChart.setOption(option)\n    },\n    tableRowStyle (row) {\n      if (row.result === 'ERROR' || row.result === 'FAIL') {\n        return 'background-color: #DC143C;'\n      } else if (row.result === 'TimeOut') {\n        return 'background-color: #FFE4C4;'\n      }\n    },\n    filterHandler (value, row, column) {\n      return row.result === value\n    },\n    getTenTestTime () {\n      let self = this\n      let params = {\n        project_id: this.$route.params.project_id\n      }\n      let headers = {\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      }\n      getTestTenTime(headers, params).then(_data => {\n        let { msg, code, data } = _data\n        if (code === '999999') {\n          self.options = data\n          if (data.length) {\n            self.time = data[0].startTime\n            self.elapsedTime = data[0].elapsedTime\n            self.host = data[0].host\n            self.getTestResult()\n          }\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          })\n        }\n      })\n    },\n    changeHost () {\n      for (let i = 0; i < this.options.length; i++) {\n        if (this.options[i]['startTime'] === this.time) {\n          this.host = this.options[i].host\n          this.elapsedTime = this.options[i].elapsedTime\n        }\n      }\n    },\n    getLatelyTenTestResult () {\n      let self = this\n      let params = {\n        project_id: this.$route.params.project_id\n      }\n      let headers = {\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      }\n      getTestTenResult(headers, params).then(_data => {\n        let { msg, code, data } = _data\n        if (code === '999999') {\n          console.log(data)\n          data.forEach((item) => {\n            self.latelyTenPass.push(item.pass * 100)\n            self.latelyTenFail.push(item.fail * 100)\n            self.latelyTenError.push(item.error * 100)\n          })\n        // self.drawLine()\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          })\n        }\n      })\n    }\n  },\n  watch: {\n    time () {\n      this.getAbExpMeta()\n      this.getTestResult()\n      // this.changeHost()\n      // this.drawLine()\n    },\n    abkpi () {\n      this.getAbExpMeta()\n      this.getTestResult()\n      // this.changeHost()\n      // this.drawLine()\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .demo-table-expand {\n      font-size: 0;\n  }\n  .demo-table-expand label {\n      width: 90px;\n      color: #99a9bf;\n  }\n  .demo-table-expand .el-form-item {\n      margin-right: 0;\n      margin-bottom: 0;\n      width: 50%;\n  }\n  .return-list {\n      margin-top: 0px;\n      margin-bottom: 10px;\n      border-radius: 0px;\n  }\n  .abwinner {\n      border-radius: 25px;\n      padding: 10px;\n      box-sizing: border-box;\n      color: #fff;\n      font-size: 15px;\n      background-color: #409eff;\n      text-align: center;\n      margin-right: 10px;\n  }\n  .abcontrol {\n      padding: 2px;\n      font-size: 8px;\n      color: #fff;\n      background-color: #FF9900;\n  }\n  .topmargin {margin-top: 1cm};\n  .absuccess {\n      color: #fff;\n      background-color: #00FF00;\n  };\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./abCaseDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./abCaseDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./abCaseDetails.vue?vue&type=template&id=78a3fdd7&scoped=true&\"\nimport script from \"./abCaseDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./abCaseDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./abCaseDetails.vue?vue&type=style&index=0&id=78a3fdd7&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"78a3fdd7\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}